import pytest
from pages import FAQPage
from selenium import webdriver
import allure


@allure.feature("Вопросы о важном")
class TestFAQPage:
    """Тесты для поля FAQ"""

    driver = None

    @classmethod
    def setup_class(cls):
        cls.driver = webdriver.Firefox()

    @pytest.mark.parametrize("question_text, expected_text", [
        ("Сколько это стоит? И как оплатить?", "Сутки — 400 рублей. Оплата курьеру — наличными или картой."),
        ("Хочу сразу несколько самокатов! Так можно?",
         "Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать \
несколько заказов — один за другим."),
        ("Как рассчитывается время аренды?",
         "Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды \
начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда \
закончится 9 мая в 20:30."),
        ("Можно ли заказать самокат прямо на сегодня?",
         "Только начиная с завтрашнего дня. Но скоро станем расторопнее."),
        ("Можно ли продлить заказ или вернуть самокат раньше?",
         "Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010."),
        ("Вы привозите зарядку вместе с самокатом?",
         "Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без \
передышек и во сне. Зарядка не понадобится."),
        ("Можно ли отменить заказ?",
         "Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои."),
        ("Я жизу за МКАДом, привезёте?",
         "Да, обязательно. Всем самокатов! И Москве, и Московской области.")
    ])
    @allure.story("Тест для раздела «Вопросы о важном»")
    @allure.title("Тест для вопроса: {question_text}")
    @allure.description("На странице ищем вопрос и проверяем, что ответ ему соответствует")
    def test_faq_click_on_questions(self, question_text, expected_text):
        """Тест для проверки вопросов и ответов в разделе FAQ"""

        with allure.step(f"Открытие страницы FAQ и клик по вопросу: {question_text}"):
            faq_page = FAQPage(self.driver)
            faq_page.get_faq_page()
            faq_page.click_on_question(question_text)  # Клик по вопросу

        with allure.step("Получение текста ответа на вопрос"):
            actual_answer, visibility = faq_page.get_answer_text(question_text)

        # Проверяем, что текст ответа соответствует ожидаемому
        assert actual_answer == expected_text and visibility, f"Ожидание: {expected_text} - реальность: {actual_answer}"

    @classmethod
    def teardown_class(cls):
        cls.driver.quit()
